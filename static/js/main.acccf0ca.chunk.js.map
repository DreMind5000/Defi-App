{"version":3,"sources":["dbank.png","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","App","Component","componentWillMount","loadBlockchainData","props","dispatch","window","ethereum","web3","Web3","eth","net","getId","netId","getAccounts","accounts","getBalance","balance","setState","account","alert","token","Contract","Token","abi","networks","address","dbank","dBank","dBankAddress","e","console","log","deposit","amount","state","methods","send","value","toString","from","withdraw","preventDefault","borrow","payOff","collateralEther","call","tokenBorrowed","approve","constructor","super","this","render","className","href","target","rel","src","alt","height","role","Tabs","defaultActiveKey","id","Tab","eventKey","title","onSubmit","depositAmount","step","type","ref","input","placeholder","required","onClick","borrowAmount","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acccf0ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dbank.ea6a4ef5.png\";","import { Tabs, Tab } from 'react-bootstrap'\r\nimport dBank from '../abis/dBank.json'\r\nimport React, { Component } from 'react';\r\nimport Token from '../abis/Token.json'\r\nimport dbank from '../dbank.png';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)\r\n  }\r\n\r\n  async loadBlockchainData(dispatch) {\r\n    if(typeof window.ethereum!=='undefined'){\r\n      const web3 = new Web3(window.ethereum)\r\n      const netId = await web3.eth.net.getId()\r\n      const accounts = await web3.eth.getAccounts()\r\n\r\n      //load balance\r\n      if(typeof accounts[0] !=='undefined'){\r\n        const balance = await web3.eth.getBalance(accounts[0])\r\n        this.setState({account: accounts[0], balance: balance, web3: web3})\r\n      } else {\r\n        window.alert('Please login with MetaMask')\r\n      }\r\n\r\n      //load contracts\r\n      try {\r\n        const token = new web3.eth.Contract(Token.abi, Token.networks[netId].address)\r\n        const dbank = new web3.eth.Contract(dBank.abi, dBank.networks[netId].address)\r\n        const dBankAddress = dBank.networks[netId].address\r\n        this.setState({token: token, dbank: dbank, dBankAddress: dBankAddress})\r\n      } catch (e) {\r\n        console.log('Error', e)\r\n        window.alert('Contracts not deployed to the current network')\r\n      }\r\n\r\n    } else {\r\n      window.alert('Please install MetaMask')\r\n    }\r\n  }\r\n\r\n  async deposit(amount) {\r\n    if(this.state.dbank!=='undefined'){\r\n      try{\r\n        await this.state.dbank.methods.deposit().send({value: amount.toString(), from: this.state.account})\r\n      } catch (e) {\r\n        console.log('Error, deposit: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  async withdraw(e) {\r\n    e.preventDefault()\r\n    if(this.state.dbank!=='undefined'){\r\n      try{\r\n        await this.state.dbank.methods.withdraw().send({from: this.state.account})\r\n      } catch(e) {\r\n        console.log('Error, withdraw: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  async borrow(amount) {\r\n    if(this.state.dbank!=='undefined'){\r\n      try{\r\n        await this.state.dbank.methods.borrow().send({value: amount.toString(), from: this.state.account})\r\n      } catch (e) {\r\n        console.log('Error, borrow: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  async payOff(e) {\r\n    e.preventDefault()\r\n    if(this.state.dbank!=='undefined'){\r\n      try{\r\n        const collateralEther = await this.state.dbank.methods.collateralEther(this.state.account).call({from: this.state.account})\r\n        const tokenBorrowed = collateralEther/2\r\n        await this.state.token.methods.approve(this.state.dBankAddress, tokenBorrowed.toString()).send({from: this.state.account})\r\n        await this.state.dbank.methods.payOff().send({from: this.state.account})\r\n      } catch(e) {\r\n        console.log('Error, pay off: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      web3: 'undefined',\r\n      account: '',\r\n      token: null,\r\n      dbank: null,\r\n      balance: 0,\r\n      dBankAddress: null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='text-monospace'>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.deliverer.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n        <img src={dbank} className=\"App-logo\" alt=\"logo\" height=\"32\"/>\r\n          <b>Deliverer Defi</b>\r\n        </a>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5 text-center\">\r\n        <br></br>\r\n          <h1>Welcome to Deliverer Defi</h1>\r\n          <h2>{this.state.account}</h2>\r\n          <br></br>\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n              <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                  <div>\r\n                  <br></br>\r\n                    How much do you want to deposit?\r\n                    <br></br>\r\n                    (min. amount is 0.01 ETH)\r\n                    <br></br>\r\n                    (1 deposit is possible at the time)\r\n                    <br></br>\r\n                    <form onSubmit={(e) => {\r\n                      e.preventDefault()\r\n                      let amount = this.depositAmount.value\r\n                      amount = amount * 10**18 //convert to wei\r\n                      this.deposit(amount)\r\n                    }}>\r\n                      <div className='form-group mr-sm-2'>\r\n                      <br></br>\r\n                        <input\r\n                          id='depositAmount'\r\n                          step=\"0.01\"\r\n                          type='number'\r\n                          ref={(input) => { this.depositAmount = input }}\r\n                          className=\"form-control form-control-md\"\r\n                          placeholder='amount...'\r\n                          required />\r\n                      </div>\r\n                      <button type='submit' className='btn btn-primary'>DEPOSIT</button>\r\n                    </form>\r\n\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"withdraw\" title=\"Withdraw\">\r\n                  <br></br>\r\n                    Do you want to withdraw + take interest?\r\n                    <br></br>\r\n                    <br></br>\r\n                  <div>\r\n                    <button type='submit' className='btn btn-primary' onClick={(e) => this.withdraw(e)}>WITHDRAW</button>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"borrow\" title=\"Borrow\">\r\n                  <div>\r\n\r\n                  <br></br>\r\n                    Do you want to borrow tokens?\r\n                    <br></br>\r\n                    (You'll get 50% of collateral, in Tokens)\r\n                    <br></br>\r\n                    Type collateral amount (in ETH)\r\n                    <br></br>\r\n                    <br></br>\r\n                    <form onSubmit={(e) => {\r\n\r\n                      e.preventDefault()\r\n                      let amount = this.borrowAmount.value\r\n                      amount = amount * 10 **18 //convert to wei\r\n                      this.borrow(amount)\r\n                    }}>\r\n                      <div className='form-group mr-sm-2'>\r\n                        <input\r\n                          id='borrowAmount'\r\n                          step=\"0.01\"\r\n                          type='number'\r\n                          ref={(input) => { this.borrowAmount = input }}\r\n                          className=\"form-control form-control-md\"\r\n                          placeholder='amount...'\r\n                          required />\r\n                      </div>\r\n                      <button type='submit' className='btn btn-primary'>BORROW</button>\r\n                    </form>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"payOff\" title=\"Payoff\">\r\n                  <div>\r\n\r\n                  <br></br>\r\n                    Do you want to payoff the loan?\r\n                    <br></br>\r\n                    (You'll receive your collateral - fee)\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button type='submit' className='btn btn-primary' onClick={(e) => this.payOff(e)}>PAYOFF</button>\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}